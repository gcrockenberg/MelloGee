name: angular-app - Build and deploy Angular application
on:
  push:
    branches:
    - main
    paths:
    - Frontends/Angular/Me**
# Permission to support Azure login using OIDC
permissions:
  id-token: write
env:  
  STORAGE_ACCOUNT_NAME: stmedev
  WORKING_DIRECTORY: Frontends/Angular/Me

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout to the branch
      uses: actions/checkout@v3
    - 
      name: Install Node.js
      uses: actions/setup-node@v3
      with: 
        node-version: 16
    -
      name: Install Angular cli
      working-directory: ${{ env.WORKING_DIRECTORY }} 
      run: npm install -g @angular/cli@latest
    -
      name: Npm install
      working-directory: ${{ env.WORKING_DIRECTORY }} 
      run: npm install
    -
      name: Run tests
      working-directory: ${{ env.WORKING_DIRECTORY }} 
      run: ng test --no-watch --browsers=ChromeHeadless
    -
      name: Build application
      working-directory: ${{ env.WORKING_DIRECTORY }} 
      run: ng build --configuration production
    - 
      name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: me-dist
        path: |
            ${{ env.WORKING_DIRECTORY }}/dist/me

  deploy:
    runs-on: ubuntu-latest
    # Set Git Environments
    environment: dev
    needs: build
    steps:
    - # Only need to azure-oidc-login 
      uses: actions/checkout@v3
      with:
        sparse-checkout: |
          .github   
    - 
      name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: me-dist
        path: dist
    # - 
    #   name: Test 2
    #   shell: bash
    #   run: |
    #     pwd
    #     ls -al
    - 
      name: Azure Login using OIDC
      uses: ./.github/workflows/composite/azure-oidc-login
      with:
        tenant_id: ${{ secrets.AZURE_TENANT_ID }}
        subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client_id: ${{ secrets.AZURE_CLIENT_ID }} # See Readme for the correct Client Id to reference
    - 
      name: Deploy to Azure Storage static website
      uses: azure/CLI@v1
      with:
        inlineScript: >
          az storage blob upload-batch --overwrite true -d '$web' --account-name ${{ env.STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.STORAGE_ACCOUNT_KEY }} -s dist
    - 
      name: logout
      run: >
        az logout
