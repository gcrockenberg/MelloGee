# An example config which accepts HTTP/1 requests over TCP and forwards them to google using HTTP/3
admin:
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901
static_resources:
  listeners:
  - name: listener_0 #http
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 7777
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          upgrade_configs:  # SignalR
            - upgrade_type: websocket
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/c/api/v1/catalog"
                route:
                  prefix_rewrite: "/api/v1/catalog"
                  cluster: catalog_service
                typed_per_filter_config:
                  envoy.filters.http.cors:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                    allow_origin_string_match:
                    - contains: localhost
                    - safe_regex:
                        regex: .*\.envoyproxy\.io
                    allow_methods: "*"                    
                    allow_headers: "*"
              - match:
                  prefix: "/b/api/v1/cart"
                route:
                  prefix_rewrite: "/api/v1/cart"
                  cluster: cart_service
                typed_per_filter_config:
                  envoy.filters.http.cors:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                    allow_origin_string_match:
                    - contains: localhost
                    - safe_regex:
                        regex: .*\.envoyproxy\.io
                    allow_methods: "*"
                    allow_headers: "*"
              - match:
                  prefix: "/o/api/v1/order"
                route:
                  prefix_rewrite: "/api/v1/order"
                  cluster: order_service
                typed_per_filter_config:
                  envoy.filters.http.cors:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                    allow_origin_string_match:
                    - contains: localhost
                    - safe_regex:
                        regex: .*\.envoyproxy\.io
                    allow_methods: "*"
                    allow_headers: "*"
              - match:
                  prefix: "/hub/notificationhub"
                route:
                  #prefix_rewrite: "/api/v1/order"
                  cluster: signalr_service
                typed_per_filter_config:
                  envoy.filters.http.cors:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                    allow_origin_string_match:
                    - contains: localhost
                    - safe_regex:
                        regex: .*\.envoyproxy\.io
                    allow_methods: "*"
                    allow_headers: "*"
                    allow_credentials: true
              - match:
                  prefix: "/webhook"
                route:
                  #prefix_rewrite: "/api/v1/order"
                  cluster: order_service
                typed_per_filter_config:
                  envoy.filters.http.cors:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                    allow_origin_string_match:
                    - contains: localhost
                    - safe_regex:
                        regex: .*\.envoyproxy\.io
                    allow_methods: "*"
                    allow_headers: "*"
                    allow_credentials: true
          http_filters:
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: catalog_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: catalog_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: me-catalog-api  # Container name
                port_value: 80        # HTTP behind gateway
  - name: cart_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: cart_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: me-cart-api  # Container name
                port_value: 80        # HTTP behind gateway
  - name: order_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: order_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: me-order-api  # Container name
                port_value: 80        # HTTP behind gateway
  - name: signalr_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: order_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: me-signalr  # Container name
                port_value: 80        # HTTP behind gateway